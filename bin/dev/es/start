#!/usr/bin/env bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
PROJECT_ROOT_DIR=$DIR/../../../

source $PROJECT_ROOT_DIR/.env

# Create certs (ca.crt, es01.[key|crt], kibana.[key|crt], etc)
docker-compose -f $PROJECT_ROOT_DIR/docker/es/certs/create-certs.yml run --rm create_certs

# start ES and Kibana
docker-compose -f $PROJECT_ROOT_DIR/docker-compose.yml up -d

# test that es is ready
#docker exec kibana \
#    curl --cacert /usr/share/elasticsearch/config/certificates/ca/ca.crt \
#    -u elastic:KHZrV8CEesGZyeugKiIm \
#    https://es01:9200

# ensure that ES is up
WAIT_TIME=10
until $(docker exec kibana bash -c 'curl -o /dev/null -sIf  --cacert /usr/share/elasticsearch/config/certificates/ca/ca.crt -u elastic:$ELASTIC_PASSWORD https://es01:9200'); do
    printf "es is not ready... waiting $WAIT_TIME seconds\n"
    sleep $WAIT_TIME
done

# Docker health check for ES
#healthcheck:
#      test: curl --cacert $CERTS_DIR/ca/ca.crt -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
#      interval: 30s
#      timeout: 10s
#      retries: 5

# Update kibana_system user password
docker exec kibana bash -c 'curl -sX POST \
  --cacert /usr/share/elasticsearch/config/certificates/ca/ca.crt \
  --url https://es01:9200/_security/user/kibana_system/_password \
  -H "authorization: Basic $(echo -ne elastic:$ELASTIC_PASSWORD | base64 --wrap 0)" \
  -H "content-type: application/json" \
  -d "{
  \"password\" : \"$ELASTICSEARCH_PASSWORD\"
}"'

# restart everything
docker-compose restart

until $(docker exec kibana bash -c 'curl -o /dev/null -ILsf --cacert /usr/share/elasticsearch/config/certificates/ca/ca.crt https://kibana:5601'); do
    printf "kibana is not ready... waiting $WAIT_TIME seconds\n"
    sleep $WAIT_TIME
done

# test kibana
#docker exec kibana curl -ILsf --cacert /usr/share/elasticsearch/config/certificates/ca/ca.crt https://kibana:5601

# cleanup
# docker volume rm es_certs es_es01_data